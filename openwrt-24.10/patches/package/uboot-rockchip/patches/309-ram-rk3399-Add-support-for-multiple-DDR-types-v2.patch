From c82588ad68829f74ed1f411b58999ab11e849634 Mon Sep 17 00:00:00 2001
From: Jensen Huang <jensenhuang@friendlyarm.com>
Date: Fri, 26 Aug 2022 13:39:20 +0800
Subject: [PATCH 1/2] ram: rk3399: Add support for multiple DDR types (v2)

Move rockchip,sdram-params to named subnode to include
multiple sdram parameters, and then read the parameters
(by subnode name, first subnode or current node) before
rk3399_dmc_init().

Signed-off-by: Jensen Huang <jensenhuang@friendlyarm.com>
---
 arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi      |  6 ++-
 arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi      |  5 +-
 arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi      |  6 ++-
 .../arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi |  3 ++
 .../arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi |  3 ++
 .../rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi |  3 ++
 arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi     |  3 ++
 drivers/ram/rockchip/sdram_common.c           |  2 +
 drivers/ram/rockchip/sdram_rk3399.c           | 49 +++++++++++++++----
 9 files changed, 66 insertions(+), 14 deletions(-)

--- a/arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi
+++ b/arch/arm/dts/rk3399-sdram-ddr3-1333.dtsi
@@ -4,7 +4,9 @@
  */
 
 &dmc {
-        rockchip,sdram-params = <
+	ddr3-1333 {
+	u-boot,dm-pre-reloc;
+	rockchip,sdram-params = <
 		0x1
 		0xa
 		0x3
@@ -1536,5 +1538,5 @@
 		0x01010000
 		0x00000000
 	>;
+	};
 };
-
--- a/arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi
+++ b/arch/arm/dts/rk3399-sdram-ddr3-1600.dtsi
@@ -4,7 +4,9 @@
  */
 
 &dmc {
-        rockchip,sdram-params = <
+	ddr3-1600 {
+	u-boot,dm-pre-reloc;
+	rockchip,sdram-params = <
 		0x1
 		0xa
 		0x3
@@ -1536,4 +1538,5 @@
 		0x01010000
 		0x00000000
 	>;
+	};
 };
--- a/arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi
+++ b/arch/arm/dts/rk3399-sdram-ddr3-1866.dtsi
@@ -4,7 +4,9 @@
  */
 
 &dmc {
-        rockchip,sdram-params = <
+	ddr3-1866 {
+	u-boot,dm-pre-reloc;
+	rockchip,sdram-params = <
 		0x1
 		0xa
 		0x3
@@ -1536,5 +1538,5 @@
 		0x01010000
 		0x00000000
 	>;
+	};
 };
-
--- a/arch/arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi
+++ b/arch/arm/dts/rk3399-sdram-lpddr3-2GB-1600.dtsi
@@ -5,6 +5,8 @@
  */
 
 &dmc {
+	lpddr3-2GB-1600 {
+	u-boot,dm-pre-reloc;
 	rockchip,sdram-params = <
 		0x1
 		0xa
@@ -1537,4 +1539,5 @@
 		0x01010000
 		0x00000000
 	>;
+	};
 };
--- a/arch/arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi
+++ b/arch/arm/dts/rk3399-sdram-lpddr3-4GB-1600.dtsi
@@ -4,6 +4,8 @@
  */
 
 &dmc {
+	lpddr3-4GB-1600 {
+	u-boot,dm-pre-reloc;
 	rockchip,sdram-params = <
 		0x2
 		0xa
@@ -1536,4 +1538,5 @@
 		0x01010000
 		0x00000000
 	>;
+	};
 };
--- a/arch/arm/dts/rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi
+++ b/arch/arm/dts/rk3399-sdram-lpddr3-samsung-4GB-1866.dtsi
@@ -4,6 +4,8 @@
  */
 
 &dmc {
+	lpddr3-samsung-4GB-1866 {
+	u-boot,dm-pre-reloc;
 	rockchip,sdram-params = <
 		0x2
 		0xa
@@ -1543,4 +1545,5 @@
 		0x01010000	/* DENALI_PHY_957_DATA */
 		0x00000000	/* DENALI_PHY_958_DATA */
 	>;
+	};
 };
--- a/arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi
+++ b/arch/arm/dts/rk3399-sdram-lpddr4-100.dtsi
@@ -6,6 +6,8 @@
  */
 
 &dmc {
+	lpddr4-100 {
+	u-boot,dm-pre-reloc;
 	rockchip,sdram-params = <
 		0x2
 		0xa
@@ -1538,4 +1540,5 @@
 		0x01010000
 		0x00000000
 	>;
+	};
 };
--- a/drivers/ram/rockchip/sdram_common.c
+++ b/drivers/ram/rockchip/sdram_common.c
@@ -396,6 +396,8 @@ int sdram_detect_cs1_row(struct sdram_ca
 
 	if (cap_info->rank == 2) {
 		cs0_cap = sdram_get_cs_cap(cap_info, 0, dram_type);
+		if (cap_info->row_3_4)
+			cs0_cap = cs0_cap * 3 / 4;
 
 		if (dram_type == DDR4) {
 			if (cap_info->dbw == 0)
--- a/drivers/ram/rockchip/sdram_rk3399.c
+++ b/drivers/ram/rockchip/sdram_rk3399.c
@@ -1625,7 +1625,6 @@ static void set_ddr_stride(struct rk3399
 	rk_clrsetreg(&pmusgrf->soc_con4, 0x1f << 10, stride << 10);
 }
 
-#if !defined(CONFIG_RAM_RK3399_LPDDR4)
 static int data_training_first(struct dram_info *dram, u32 channel, u8 rank,
 			       struct rk3399_sdram_params *params)
 {
@@ -1715,8 +1714,8 @@ void modify_param(const struct chan_info
 	clrsetbits_le32(&denali_pi_params[76], 0x1 << 24, 0x1 << 24);
 	clrsetbits_le32(&denali_pi_params[77], 0x1, 0x1);
 }
-#else
 
+#if defined(CONFIG_RAM_RK3399_LPDDR4)
 struct rk3399_sdram_params dfs_cfgs_lpddr4[] = {
 #include "sdram-rk3399-lpddr4-400.inc"
 #include "sdram-rk3399-lpddr4-800.inc"
@@ -3011,22 +3010,42 @@ static int sdram_init(struct dram_info *
 	return 0;
 }
 
+__weak const char *rk3399_get_ddrtype(void)
+{
+	return NULL;
+}
+
 static int rk3399_dmc_of_to_plat(struct udevice *dev)
 {
 	struct rockchip_dmc_plat *plat = dev_get_plat(dev);
+	ofnode node = ofnode_null();
+	const char *name;
 	int ret;
 
 	if (!CONFIG_IS_ENABLED(OF_REAL))
 		return 0;
 
-	ret = dev_read_u32_array(dev, "rockchip,sdram-params",
-				 (u32 *)&plat->sdram_params,
-				 sizeof(plat->sdram_params) / sizeof(u32));
+	name = rk3399_get_ddrtype(); printf("DDR type: %s\n", name);
+	if (name)
+		node = dev_read_subnode(dev, name);
+	if (!ofnode_valid(node)) {
+		debug("Failed to read subnode %s\n", name ? : "");
+		node = dev_read_first_subnode(dev);
+	}
+
+	/* fallback to current node */
+	if (!ofnode_valid(node))
+		node = dev_ofnode(dev);
+
+	ret = ofnode_read_u32_array(node, "rockchip,sdram-params",
+				    (u32 *)&plat->sdram_params,
+				    sizeof(plat->sdram_params) / sizeof(u32));
 	if (ret) {
 		printf("%s: Cannot read rockchip,sdram-params %d\n",
 		       __func__, ret);
 		return ret;
 	}
+
 	ret = regmap_init_mem(dev_ofnode(dev), &plat->map);
 	if (ret)
 		printf("%s: regmap failed %d\n", __func__, ret);
@@ -3051,18 +3070,20 @@ static int conv_of_plat(struct udevice *
 #endif
 
 static const struct sdram_rk3399_ops rk3399_ops = {
-#if !defined(CONFIG_RAM_RK3399_LPDDR4)
 	.data_training_first = data_training_first,
 	.set_rate_index = switch_to_phy_index1,
 	.modify_param = modify_param,
 	.get_phy_index_params = get_phy_index_params,
-#else
+};
+
+#if defined(CONFIG_RAM_RK3399_LPDDR4)
+static const struct sdram_rk3399_ops lpddr4_ops = {
 	.data_training_first = lpddr4_mr_detect,
 	.set_rate_index = lpddr4_set_rate,
 	.modify_param = lpddr4_modify_param,
 	.get_phy_index_params = lpddr4_get_phy_index_params,
-#endif
 };
+#endif
 
 static int rk3399_dmc_init(struct udevice *dev)
 {
@@ -3081,7 +3102,17 @@ static int rk3399_dmc_init(struct udevic
 		return ret;
 #endif
 
-	priv->ops = &rk3399_ops;
+	if (params->base.dramtype == LPDDR4) {
+#if defined(CONFIG_RAM_RK3399_LPDDR4)
+		priv->ops = &lpddr4_ops;
+#else
+		printf("LPDDR4 support is disable\n");
+		return -EINVAL;
+#endif
+	} else {
+		priv->ops = &rk3399_ops;
+	}
+
 	priv->cic = syscon_get_first_range(ROCKCHIP_SYSCON_CIC);
 	priv->grf = syscon_get_first_range(ROCKCHIP_SYSCON_GRF);
 	priv->pmu = syscon_get_first_range(ROCKCHIP_SYSCON_PMU);
